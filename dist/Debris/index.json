{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The Debris service allows the developer to schedule the removal of the object\nwithout yielding any code, through the usage of the ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":2,"column":53,"offset":130}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Debris:AddItem()"}],"position":{"start":{"line":2,"column":53,"offset":130},"end":{"line":2,"column":77,"offset":154}}},{"type":"text","value":"\nmethod.","position":{"start":{"line":2,"column":77,"offset":154},"end":{"line":3,"column":8,"offset":162}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":3,"column":8,"offset":162}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After the lifetime argument has elapsed (in seconds) the object is removed in\nthe same manner as ","position":{"start":{"line":5,"column":1,"offset":164},"end":{"line":6,"column":20,"offset":261}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Instance:Destroy()"}],"position":{"start":{"line":6,"column":20,"offset":261},"end":{"line":6,"column":46,"offset":287}}},{"type":"text","value":".","position":{"start":{"line":6,"column":46,"offset":287},"end":{"line":6,"column":47,"offset":288}}}],"position":{"start":{"line":5,"column":1,"offset":164},"end":{"line":6,"column":47,"offset":288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As Debris is a service it must be created using the\n","position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":9,"column":1,"offset":342}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.ServiceProvider:GetService()"}],"position":{"start":{"line":9,"column":1,"offset":342},"end":{"line":9,"column":37,"offset":378}}},{"type":"text","value":" method.","position":{"start":{"line":9,"column":37,"offset":378},"end":{"line":9,"column":45,"offset":386}}}],"position":{"start":{"line":8,"column":1,"offset":290},"end":{"line":9,"column":45,"offset":386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Why use Debris?","position":{"start":{"line":11,"column":3,"offset":390},"end":{"line":11,"column":18,"offset":405}}}],"position":{"start":{"line":11,"column":1,"offset":388},"end":{"line":11,"column":20,"offset":407}}}],"position":{"start":{"line":11,"column":1,"offset":388},"end":{"line":11,"column":20,"offset":407}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Beyond creating a bit of a mess, objects that are no longer required can use\nup system memory and cause the game to run slower over time. For this reason\nit is always advised to run the ","position":{"start":{"line":13,"column":1,"offset":409},"end":{"line":15,"column":33,"offset":595}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Instance:Destroy()"}],"position":{"start":{"line":15,"column":33,"offset":595},"end":{"line":15,"column":59,"offset":621}}},{"type":"text","value":" function on objects\nyou no longer need. However in many cases an object may have a specific period\nof utility after which it needs to be destroyed.","position":{"start":{"line":15,"column":59,"offset":621},"end":{"line":17,"column":49,"offset":769}}}],"position":{"start":{"line":13,"column":1,"offset":409},"end":{"line":17,"column":49,"offset":769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Take the example of projectile that has just been thrown. It could be cleaned\nup using:","position":{"start":{"line":19,"column":1,"offset":771},"end":{"line":20,"column":10,"offset":858}}}],"position":{"start":{"line":19,"column":1,"offset":771},"end":{"line":20,"column":10,"offset":858}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wait(3)\nprojectile:Destroy()\n"}],"position":{"start":{"line":22,"column":1,"offset":860},"end":{"line":25,"column":4,"offset":899}}}],"position":{"start":{"line":22,"column":1,"offset":860},"end":{"line":25,"column":4,"offset":899}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"However there are a number of issues with this approach. Firstly, it requires\nyielding the code with a wait, which is not always desirable. Secondly, before\nthe 3 seconds have elapsed the object may have already been destroyed (for\nexample, if it reached ","position":{"start":{"line":27,"column":1,"offset":901},"end":{"line":30,"column":24,"offset":1156}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Workspace.FallenPartsDestroyHeight"}],"position":{"start":{"line":30,"column":24,"offset":1156},"end":{"line":30,"column":66,"offset":1198}}},{"type":"text","value":").","position":{"start":{"line":30,"column":66,"offset":1198},"end":{"line":30,"column":68,"offset":1200}}}],"position":{"start":{"line":27,"column":1,"offset":901},"end":{"line":30,"column":68,"offset":1200}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"delay(3, function()\n\tif projectile and projectile.Parent then\n\t\tprojectile:Destroy()\n\tend\nend)\n"}],"position":{"start":{"line":32,"column":1,"offset":1202},"end":{"line":38,"column":4,"offset":1307}}}],"position":{"start":{"line":32,"column":1,"offset":1202},"end":{"line":38,"column":4,"offset":1307}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This solves the above issues, as it spawns a new thread to prevent the current\none from yielding and checks to see if it can be destroyed. However at this\npoint a simple command has already become quite complicated and an unnecessary\nthread is being created.","position":{"start":{"line":40,"column":1,"offset":1309},"end":{"line":43,"column":25,"offset":1567}}}],"position":{"start":{"line":40,"column":1,"offset":1309},"end":{"line":43,"column":25,"offset":1567}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is where Debris comes in, and the following code addresses all of the\nabove issues.","position":{"start":{"line":45,"column":1,"offset":1569},"end":{"line":46,"column":14,"offset":1657}}}],"position":{"start":{"line":45,"column":1,"offset":1569},"end":{"line":46,"column":14,"offset":1657}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Debris:AddItem(projectile, 3)\n"}],"position":{"start":{"line":48,"column":1,"offset":1659},"end":{"line":50,"column":4,"offset":1699}}}],"position":{"start":{"line":48,"column":1,"offset":1659},"end":{"line":50,"column":4,"offset":1699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Debris does not yield the current thread, does not require a new thread and\nwill not error if the object is already destroyed. For this reason it is the\nrecommended method for cleaning up objects with a fixed lifetime.","position":{"start":{"line":52,"column":1,"offset":1701},"end":{"line":54,"column":66,"offset":1919}}}],"position":{"start":{"line":52,"column":1,"offset":1701},"end":{"line":54,"column":66,"offset":1919}}}],"data":{"quirksMode":false},"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":1,"offset":0}}}