{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CurveAnimation is a subtype of ","position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":32,"offset":31}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.AnimationClip"}],"position":{"start":{"line":1,"column":32,"offset":31},"end":{"line":1,"column":53,"offset":52}}},{"type":"text","value":" consumed by Roblox's\nanimation system. It stores animation data for each animated channel in a Rig\nas a separate, individual curve. For example, CurveAnimation stores the\nPosition channel for an articulated joint as ","position":{"start":{"line":1,"column":53,"offset":52},"end":{"line":4,"column":46,"offset":269}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Vector3Curve"}],"position":{"start":{"line":4,"column":46,"offset":269},"end":{"line":4,"column":66,"offset":289}}},{"type":"text","value":", and it\nmight store the Rotation channel as an ","position":{"start":{"line":4,"column":66,"offset":289},"end":{"line":5,"column":40,"offset":337}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.EulerRotationCurve"}],"position":{"start":{"line":5,"column":40,"offset":337},"end":{"line":5,"column":66,"offset":363}}},{"type":"text","value":" or a\n","position":{"start":{"line":5,"column":66,"offset":363},"end":{"line":6,"column":1,"offset":369}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.RotationCurve"}],"position":{"start":{"line":6,"column":1,"offset":369},"end":{"line":6,"column":22,"offset":390}}},{"type":"text","value":".","position":{"start":{"line":6,"column":22,"offset":390},"end":{"line":6,"column":23,"offset":391}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":6,"column":23,"offset":391}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"CurveAnimation structure","position":{"start":{"line":8,"column":4,"offset":396},"end":{"line":8,"column":28,"offset":420}}}],"position":{"start":{"line":8,"column":1,"offset":393},"end":{"line":8,"column":28,"offset":420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CurveAnimation stores curves in a hierarchical manner, matching the hierarchy\nof the structure of ","position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":11,"column":21,"offset":520}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Motor6D"}],"position":{"start":{"line":11,"column":21,"offset":520},"end":{"line":11,"column":36,"offset":535}}},{"type":"text","value":"s or ","position":{"start":{"line":11,"column":36,"offset":535},"end":{"line":11,"column":41,"offset":540}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Bone"}],"position":{"start":{"line":11,"column":41,"offset":540},"end":{"line":11,"column":53,"offset":552}}},{"type":"text","value":"s in the animated model.\nUnder each CurveAnimation instance lies a hierarchy of ","position":{"start":{"line":11,"column":53,"offset":552},"end":{"line":12,"column":56,"offset":632}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Folder"}],"position":{"start":{"line":12,"column":56,"offset":632},"end":{"line":12,"column":70,"offset":646}}},{"type":"text","value":"\ninstances representing animated joints in the model. Under each such folder\ninstance, several possible instances may exist. An instance named 'Position'\nof type ","position":{"start":{"line":12,"column":70,"offset":646},"end":{"line":15,"column":9,"offset":808}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Vector3Curve"}],"position":{"start":{"line":15,"column":9,"offset":808},"end":{"line":15,"column":29,"offset":828}}},{"type":"text","value":" can drive the local translation of the\n","position":{"start":{"line":15,"column":29,"offset":828},"end":{"line":16,"column":1,"offset":868}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Motor6D"}],"position":{"start":{"line":16,"column":1,"offset":868},"end":{"line":16,"column":16,"offset":883}}},{"type":"text","value":" or ","position":{"start":{"line":16,"column":16,"offset":883},"end":{"line":16,"column":20,"offset":887}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Bone"}],"position":{"start":{"line":16,"column":20,"offset":887},"end":{"line":16,"column":32,"offset":899}}},{"type":"text","value":" on the animated model. Similarly, an instance\nnamed 'Rotation', of type either ","position":{"start":{"line":16,"column":32,"offset":899},"end":{"line":17,"column":34,"offset":979}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.EulerRotationCurve"}],"position":{"start":{"line":17,"column":34,"offset":979},"end":{"line":17,"column":60,"offset":1005}}},{"type":"text","value":" or\n","position":{"start":{"line":17,"column":60,"offset":1005},"end":{"line":18,"column":1,"offset":1009}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.RotationCurve"}],"position":{"start":{"line":18,"column":1,"offset":1009},"end":{"line":18,"column":22,"offset":1030}}},{"type":"text","value":" can drive the local rotation of the ","position":{"start":{"line":18,"column":22,"offset":1030},"end":{"line":18,"column":59,"offset":1067}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Motor6D"}],"position":{"start":{"line":18,"column":59,"offset":1067},"end":{"line":18,"column":74,"offset":1082}}},{"type":"text","value":" or\n","position":{"start":{"line":18,"column":74,"offset":1082},"end":{"line":19,"column":1,"offset":1086}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Bone"}],"position":{"start":{"line":19,"column":1,"offset":1086},"end":{"line":19,"column":13,"offset":1098}}},{"type":"text","value":" on the animated model.","position":{"start":{"line":19,"column":13,"offset":1098},"end":{"line":19,"column":36,"offset":1121}}}],"position":{"start":{"line":10,"column":1,"offset":422},"end":{"line":19,"column":36,"offset":1121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Partial matching of hierarchy","position":{"start":{"line":21,"column":4,"offset":1126},"end":{"line":21,"column":33,"offset":1155}}}],"position":{"start":{"line":21,"column":1,"offset":1123},"end":{"line":21,"column":33,"offset":1155}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can match partial hierarchies to a model when playing a CurveAnimation in\nRoblox's animation system. This means that not all joints need to be present\nin the hierarchy for the joints that are present to apply properly.\nFurthermore, you can match hierarchies in a 'relative' manner. For example, a\nCurveAnimation's first ","position":{"start":{"line":23,"column":1,"offset":1157},"end":{"line":27,"column":24,"offset":1481}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Folder"}],"position":{"start":{"line":27,"column":24,"offset":1481},"end":{"line":27,"column":38,"offset":1495}}},{"type":"text","value":" instance root can be ","position":{"start":{"line":27,"column":38,"offset":1495},"end":{"line":27,"column":60,"offset":1517}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"UpperTorso"}],"position":{"start":{"line":27,"column":60,"offset":1517},"end":{"line":27,"column":72,"offset":1529}}},{"type":"text","value":", and\nthe animation system matches that to any existing sub-hierarchies in the\nmodel.","position":{"start":{"line":27,"column":72,"offset":1529},"end":{"line":29,"column":7,"offset":1614}}}],"position":{"start":{"line":23,"column":1,"offset":1157},"end":{"line":29,"column":7,"offset":1614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Animating miscellaneous channels","position":{"start":{"line":31,"column":4,"offset":1619},"end":{"line":31,"column":36,"offset":1651}}}],"position":{"start":{"line":31,"column":1,"offset":1616},"end":{"line":31,"column":36,"offset":1651}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Curve Animations can also animate other numerical values in a model. For\nexample, you can animate FACS controls for facial animations by creating a\nfolder under the CurveAnimation instance named after an existing\n","position":{"start":{"line":33,"column":1,"offset":1653},"end":{"line":36,"column":1,"offset":1866}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.FaceControls"}],"position":{"start":{"line":36,"column":1,"offset":1866},"end":{"line":36,"column":21,"offset":1886}}},{"type":"text","value":" instance in the model. Then, to animate individual facial\ncontrollers, you can store individual ","position":{"start":{"line":36,"column":21,"offset":1886},"end":{"line":37,"column":39,"offset":1983}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.FloatCurve"}],"position":{"start":{"line":37,"column":39,"offset":1983},"end":{"line":37,"column":57,"offset":2001}}},{"type":"text","value":"s instances named\nafter the animated ","position":{"start":{"line":37,"column":57,"offset":2001},"end":{"line":38,"column":20,"offset":2038}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.FaceControls"}],"position":{"start":{"line":38,"column":20,"offset":2038},"end":{"line":38,"column":40,"offset":2058}}},{"type":"text","value":" property.","position":{"start":{"line":38,"column":40,"offset":2058},"end":{"line":38,"column":50,"offset":2068}}}],"position":{"start":{"line":33,"column":1,"offset":1653},"end":{"line":38,"column":50,"offset":2068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Using CurveAnimation when making animations","position":{"start":{"line":40,"column":4,"offset":2073},"end":{"line":40,"column":47,"offset":2116}}}],"position":{"start":{"line":40,"column":1,"offset":2070},"end":{"line":40,"column":47,"offset":2116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As for other AnimationClip types (such as ","position":{"start":{"line":42,"column":1,"offset":2118},"end":{"line":42,"column":43,"offset":2160}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.KeyframeSequence"}],"position":{"start":{"line":42,"column":43,"offset":2160},"end":{"line":42,"column":67,"offset":2184}}},{"type":"text","value":"), you must\nupload CurveAnimations to Roblox first before playing them. To do that, right\nclick on the CurveAnimation and click 'Save to Roblox'. Alternatively, use\n","position":{"start":{"line":42,"column":67,"offset":2184},"end":{"line":45,"column":1,"offset":2349}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.Plugin:SaveSelectedToRoblox()"}],"position":{"start":{"line":45,"column":1,"offset":2349},"end":{"line":45,"column":38,"offset":2386}}},{"type":"text","value":" to bring up the animation upload window.","position":{"start":{"line":45,"column":38,"offset":2386},"end":{"line":45,"column":79,"offset":2427}}}],"position":{"start":{"line":42,"column":1,"offset":2118},"end":{"line":45,"column":79,"offset":2427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you want to preview an Animation before uploading it to the Roblox site,\nyou can generate a temporary id using\n","position":{"start":{"line":47,"column":1,"offset":2429},"end":{"line":49,"column":1,"offset":2543}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"AnimationClipProviderProvider:RegisterAnimationClip"}],"position":{"start":{"line":49,"column":1,"offset":2543},"end":{"line":49,"column":54,"offset":2596}}},{"type":"text","value":". This generates a hash\nid that you can use for localized animation testing.","position":{"start":{"line":49,"column":54,"offset":2596},"end":{"line":50,"column":53,"offset":2672}}}],"position":{"start":{"line":47,"column":1,"offset":2429},"end":{"line":50,"column":53,"offset":2672}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Obtaining CurveAnimations","position":{"start":{"line":52,"column":4,"offset":2677},"end":{"line":52,"column":29,"offset":2702}}}],"position":{"start":{"line":52,"column":1,"offset":2674},"end":{"line":52,"column":29,"offset":2702}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As for other ","position":{"start":{"line":54,"column":1,"offset":2704},"end":{"line":54,"column":14,"offset":2717}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.AnimationClip"}],"position":{"start":{"line":54,"column":14,"offset":2717},"end":{"line":54,"column":35,"offset":2738}}},{"type":"text","value":" types (such as ","position":{"start":{"line":54,"column":35,"offset":2738},"end":{"line":54,"column":51,"offset":2754}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Class.KeyframeSequence"}],"position":{"start":{"line":54,"column":51,"offset":2754},"end":{"line":54,"column":75,"offset":2778}}},{"type":"text","value":"),\nif you want to download the CurveAnimation corresponding to an existing\nuploaded Animation using Lua scripts, use\nAnimationClipProvider:AnimationClipAsync.","position":{"start":{"line":54,"column":75,"offset":2778},"end":{"line":57,"column":42,"offset":2936}}}],"position":{"start":{"line":54,"column":1,"offset":2704},"end":{"line":57,"column":42,"offset":2936}}}],"data":{"quirksMode":false},"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":1,"offset":0}}}